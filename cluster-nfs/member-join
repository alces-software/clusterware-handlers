#!/bin/bash
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

main() {
    local a intf master_ip
    . ${cw_ROOT}/etc/config/cluster/instance.vars.sh
    if [ "${cw_INSTANCE_role}" == "master" ]; then
        eval "$(member_parse)"
        if [ "${cw_MEMBER_role}" == "slave" ]; then
            if [ -f "${cw_ROOT}/etc/nfs.vars.sh" ]; then
                . "${cw_ROOT}/etc/nfs.vars.sh"
            fi
            cw_NFS_exports="${cw_NFS_exports:-/home /opt/gridware}"

            intf="$(network_get_network_device ${cw_MEMBER_ip})"
            master_ip="$(network_get_network_address ${cw_MEMBER_ip})"

            for a in $cw_NFS_exports; do
                test -f $a || mkdir -p $a
                exportfs -o "ro,no_root_squash,no_subtree_check,sync" ${cw_MEMBER_ip}/32:$a
            done
            iptables -I INPUT -i ${intf} -s ${cw_MEMBER_ip} -j ACCEPT

            handler_broadcast nfs-ready ${master_ip} ${cw_MEMBER_ip} ${cw_NFS_exports}
        fi
    fi
}

setup
require member
require network

tee >(main "$@")
