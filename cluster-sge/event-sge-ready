#!/bin/bash
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

main() {
    local payload master_ip master_name target_ip instance_ip master_short_name

    . ${cw_ROOT}/etc/config/cluster/instance.vars.sh
    if [ "${cw_INSTANCE_role}" == "slave" ]; then
        payload=($(cat))
        log "Received payload from master: ${payload[*]}" "${cw_CLUSTER_SGE_log}"
        master_ip="${payload[1]}"
        master_name="${payload[2]}"
        target_ip="${payload[3]}"
        log "Parsed payload as: master: ${master_name} (${master_ip}) target: ${target_ip}" \
            "${cw_CLUSTER_SGE_log}"

        intf="$(network_get_network_device ${master_ip})"
        instance_ip="$(network_get_network_address ${master_ip})"
        log "Instance IP is: ${instance_ip}" "${cw_CLUSTER_SGE_log}"

        if [ "${instance_ip}" == "${target_ip}" ]; then
            log "Applying slave configuration" "${cw_CLUSTER_SGE_log}"

            if ! iptables -C INPUT -i ${intf} -s ${master_ip} -p tcp --dport 6445 -j ACCEPT &>/dev/null; then
                log "Adding iptables rule: -I INPUT -i ${intf} -s ${master_ip} -p tcp --dport 6445 -j ACCEPT" \
                    "${cw_CLUSTER_SGE_log}"
                iptables -I INPUT -i ${intf} -s ${master_ip} -p tcp --dport 6445 -j ACCEPT
            else
                log "iptables rule already exists: -I INPUT -i ${intf} -s ${master_ip} -p tcp --dport 6445 -j ACCEPT" \
                    "${cw_CLUSTER_SGE_log}"
            fi

            log "Setting act_qmaster name to: ${master_name}" "${cw_CLUSTER_SGE_log}"
            echo "${master_name}" > ${cw_ROOT}/opt/gridscheduler/etc/conf/act_qmaster

            if ! grep -q "${master_ip}.*${master_name}" /etc/hosts; then
                # no applicable entry yet.
                log "Updating /etc/hosts for ${master_name} -> ${master_ip}" "${cw_CLUSTER_SGE_log}"
                master_short_name=$(echo "${master_name}" | cut -f1 -d'.')
                if grep -q "${master_ip}" /etc/hosts; then
                    # IP present, but not this name: sed
                    sed -e "s/\(${master_ip}.*\)/\1 ${master_name} #{master_short_name}/g" -i /etc/hosts
                elif grep -q "${master_name}" /etc/hosts; then
                    # name present, but not this IP: sed out the existing name
                    sed -e "s/\(.*\)${master_name}\(.*\)/\1\2/g" -i /etc/hosts
                    echo "${master_ip} ${master_name} ${master_short_name}" >> /etc/hosts
                else
                    # IP and name not present, just add
                    echo "${master_ip} ${master_name} ${master_short_name}" >> /etc/hosts
                fi
            else
                log "/etc/hosts already contains ${master_name} -> ${master_ip} mapping" "${cw_CLUSTER_SGE_log}"
            fi

            log "Starting up clusterware-gridscheduler-execd service" "${cw_CLUSTER_SGE_log}"
            distro_start_service clusterware-gridscheduler-execd
        else
            log "Configuration message not intended for this node." "${cw_CLUSTER_SGE_log}"
        fi
    fi
}

setup
require network
require distro
require log
require handler

if [ -f "${cw_ROOT}/etc/cluster-sge.rc" ]; then
    . "${cw_ROOT}/etc/cluster-sge.rc"
    handler_tee main "$@"
fi
