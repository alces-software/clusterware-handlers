################################################################################
##
## Alces Clusterware - Handler metadata
## Copyright (C) 2015-2016 Stephen F. Norledge and Alces Software Ltd.
##
################################################################################
---
description: |
  Configure services for handling a cluster of nodes.
order: "00"
install:
  el6: |
    distro_preamble="$(cat <<'EOF'
    _cw_distro() {
      sed 's/\(.*\) release \(.*\) .*/\1 \2/g' /etc/redhat-release
    }
    EOF
    )"
    distro_postamble="unset -f _cw_distro"
  el7: |
    distro_preamble="$(cat <<'EOF'
    _cw_distro() {
      sed 's/\(.*\) release \(.*\) .*/\1 \2/g' /etc/redhat-release
    }
    EOF
    )"
    distro_postamble="unset -f _cw_distro"
  ubuntu1604: |
    distro_preamble="$(cat <<'EOF'
    _cw_distro() {
      grep ^DISTRIB_DESCRIPTION /etc/lsb-release | cut -f2 -d'"'
    }
    EOF
    )"
  _: |
    cat <<EOF > ${cw_ROOT}/etc/profile.d/10-clusterable.sh
    ################################################################################
    ##
    ## Alces Clusterware - Shell configuration
    ## Copyright (C) 2015-2016 Stephen F. Norledge and Alces Software Ltd.
    ##
    ################################################################################
    ${distro_preamble}
    EOF
    cat <<'END' >> ${cw_ROOT}/etc/profile.d/10-clusterable.sh
    if [ "$PS1" ]; then
        _cw_set_prompt() {
            if [ -f "${cw_ROOT}"/etc/config/cluster/config.rc ]; then
                eval $(egrep '^cw_CLUSTER_(name|uuid)=' "${cw_ROOT}"/etc/config/cluster/config.rc)
                eval $(egrep '^cw_INSTANCE_role=' "${cw_ROOT}"/etc/config/cluster/instance.rc)
                eval $(egrep '^cw_INSTANCE_tag_CLUSTER_ROLES=' "${cw_ROOT}"/etc/config/cluster/instance.rc)
                cw_CLUSTER_name="${cw_CLUSTER_name:-${cw_CLUSTER_uuid}}"
                if [ "$cw_INSTANCE_role" == "master" ] || [[ "${cw_INSTANCE_tag_CLUSTER_ROLES}" == *":login:"* ]]; then
                  PS1="[\u@\h\[\e[38;5;68m\](${cw_CLUSTER_name})\[\e[0m\] \W]\\$ "
                else
                  PS1="[\u@\h\[\e[48;5;17;38;5;33m\](${cw_CLUSTER_name})\[\e[0m\] \W]\\$ "
                fi
                unset cw_CLUSTER_name cw_CLUSTER_uuid cw_INSTANCE_tag_CLUSTER_ROLES cw_INSTANCE_role
            else
                PS1="[\u@\h\[\e[1;33m\](unknown)\[\e[0m\] \W]\\$ "
            fi
        }
        eval $(grep '^cw_STATUS=' "${cw_ROOT}"/etc/clusterware.rc)
        if [ "${cw_STATUS}" != "ready" ]; then
            PS1="[\u@\h\[\e[1;31m\](unconfigured)\[\e[0m\] \W]\\$ "
            _cw_check_ready() {
                eval $(grep '^cw_STATUS=' "${cw_ROOT}"/etc/clusterware.rc)
                if [ "${cw_STATUS}" == "ready" ]; then
                    cat <<EOF
    $(echo -e "\e[1;33m")========
     NOTICE
    ========$(echo -e "\e[0m")
    Configuration of this node is complete and it is now operational.

    EOF
                    _cw_set_prompt
                    PROMPT_COMMAND="$(echo "${PROMPT_COMMAND}" | sed "s,; cw_ROOT=\"${cw_ROOT}\" _cw_check_ready,,g")"
                    unset -f _cw_check_ready _cw_set_prompt
                fi
                unset cw_STATUS
            }
            PROMPT_COMMAND="${PROMPT_COMMAND:-:}; cw_ROOT=\"${cw_ROOT}\" _cw_check_ready"
        else
            _cw_set_prompt
            unset -f _cw_set_prompt
        fi
        unset cw_STATUS
    fi
    if [[ "$0" == '-'* || "$1" == "force" ]] || shopt -q login_shell; then
        # this is a login shell, so we show a login message
        if [ ! -f "${XDG_CONFIG_HOME:-$HOME/.config}/clusterware/settings.rc.ex" ]; then
          mkdir -p "${XDG_CONFIG_HOME:-$HOME/.config}/clusterware"
          cat <<EOF > "${XDG_CONFIG_HOME:-$HOME/.config}/clusterware/settings.rc.ex"
    ################################################################################
    ##
    ## Alces Clusterware - Shell configuration
    ## Copyright (C) 2016 Stephen F. Norledge and Alces Software Ltd.
    ##
    ################################################################################
    # Rename this file to settings.rc to activate.
    #===============================================================================
    #
    # Set the theme used by Clusterware tools. Options are: standard, light, dark
    # Choose 'light' for a light-colored terminal, 'dark' for a dark-colored terminal.
    #cw_SETTINGS_theme=dark
    #
    # The following options suppress various parts of the login banners:
    #
    # Set to true to stop display of the Alces Flight logo, cluster
    # name and version information.
    #cw_SETTINGS_skip_banner=true
    #
    # Set to true to stop display of "tips" and other MOTD content.
    #cw_SETTINGS_skip_motd=true
    #
    # Set to true to stop display of cluster initialization status information.
    #cw_SETTINGS_skip_status=true
    EOF
        fi
        IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
        for a in "${xdg_config[@]}"; do
          if [ -e "${a}"/clusterware/settings.rc ]; then
            source "${a}"/clusterware/settings.rc
            break
          fi
        done
        unset xdg_config a
        # Respect .hushlogin setting
        if [ ! -f "$HOME/.hushlogin" ]; then
          if [ -f "${cw_ROOT}"/etc/config/cluster/config.rc ]; then
            eval $(grep '^cw_CLUSTER_name=' "${cw_ROOT}"/etc/config/cluster/config.rc)
          fi
          if [ -f "${cw_ROOT}"/etc/clusterware.rc ]; then
            eval $(egrep '^cw_(VERSION|STATUS)=' "${cw_ROOT}"/etc/clusterware.rc)
          fi
          if [ -f "${cw_ROOT}"/etc/config/cluster/instance.rc ]; then
            eval $(egrep '^cw_INSTANCE_role=' "${cw_ROOT}"/etc/config/cluster/instance.rc)
            eval $(egrep '^cw_INSTANCE_tag_CLUSTER_ROLES=' "${cw_ROOT}"/etc/config/cluster/instance.rc)
          else
            # default to master-type behaviour if no configuration has been found yet.
            cw_INSTANCE_role=master
          fi

          if [ "${cw_SETTINGS_skip_banner:-false}" == "false" ]; then
            export cw_ROOT
            if [ "$cw_INSTANCE_role" == "master" ] || [[ "${cw_INSTANCE_tag_CLUSTER_ROLES}" == *":login:"* ]]; then
              "${cw_ROOT}"/libexec/share/banner "${cw_CLUSTER_name:-your cluster}" "${cw_VERSION}" "$(_cw_distro)"
            else
              "${cw_ROOT}"/libexec/share/banner --short "${cw_CLUSTER_name:-your cluster}" "${cw_VERSON}" "$(_cw_distro)"
            fi
          fi
          if [[ "${cw_SETTINGS_skip_motd:-false}" == "false" && "$cw_INSTANCE_role" == "master" || "${cw_INSTANCE_tag_CLUSTER_ROLES}" == *":login:"* ]]; then
            if [ -d "${cw_ROOT}"/etc/motd.d ]; then
              for a in "${cw_ROOT}"/etc/motd.d/*; do
                if [ -f "$a" ]; then
                  if [ "${a##*.}" == "sh" ]; then
                    . "$a"
                  elif [ "${a##*.}" == "txt" ]; then
                    grep -v '^#' "$a"
                  fi
                fi
              done
            fi
            if [ -f "${cw_ROOT}"/etc/motd ]; then
              grep -v '^#' ${cw_ROOT}/etc/motd
              echo ""
            fi
          fi
          if [ "${cw_SETTINGS_skip_status:-false}" == "false" ]; then
            if [ "${cw_STATUS}" == "unconfigured" ]; then
              cat <<EOF
    $(echo -e "\e[1;33m")=============
     PLEASE NOTE
    =============$(echo -e "\e[0m")
    EOF
              . "${cw_ROOT}"/etc/clusterware.rc
              if [[ "${cw_VERSION}" != 1.[0123].* ]] && [ ! -f "${cw_ROOT}"/etc/config.yml ]; then
                cat <<EOF
    Configuration of this node has $(echo -e "\e[1;31m")not yet been completed$(echo -e "\e[0m") and it is not yet
    operational.

    Please proceed with configuration by running the "$(echo -e "\e[1;37m")alces configure$(echo -e "\e[0m")" command.

    EOF
              else
                cat <<EOF
    Configuration of this node has not yet been completed and it is not yet
    operational.  When configuration is complete you will receive a notice at
    the prompt.  Additionally, the prompt will be updated to include the name of
    the cluster.

    EOF
              fi
            fi
          fi
          unset cw_INSTANCE_role cw_CLUSTER_name cw_RELEASE cw_STATUS cw_INSTANCE_tag_CLUSTER_ROLES
        fi
        unset cw_SETTINGS_skip_motd cw_SETTINGS_skip_banner cw_SETTINGS_skip_status
        export cw_SETTINGS_theme
    fi
    END
    echo "${distro_postamble}" >> ${cw_ROOT}/etc/profile.d/10-clusterable.sh

    cat <<EOF > ${cw_ROOT}/etc/profile.d/10-clusterable.csh
    ################################################################################
    ##
    ## Alces Clusterware - Shell configuration
    ## Copyright (c) 2016 Stephen F. Norledge and Alces Software Ltd
    ##
    ################################################################################
    setenv cw_ROOT "$cw_ROOT"
    /bin/bash "$cw_ROOT"/etc/profile.d/10-clusterable.sh force
    unsetenv cw_ROOT
    EOF

    cat <<EOF > ${cw_ROOT}/etc/clusterable.rc
    ################################################################################
    ##
    ## Alces Clusterware - Shell configuration
    ## Copyright (c) 2016 Alces Software Ltd
    ##
    ################################################################################
    cw_CLUSTERABLE_manage_etc_hosts=true
    cw_CLUSTERABLE_manage_hostname=true
    cw_CLUSTERABLE_manage_genders=true
    cw_CLUSTERABLE_manage_ssh_host_keys=true
    cw_CLUSTERABLE_manage_ssh_config=true
    cw_CLUSTERABLE_cleanup_on_leave=true
    EOF

    cp libexec/clusterware-key-manager "${cw_ROOT}"/libexec/share
    chmod 0700 "${cw_ROOT}"/libexec/share/clusterware-key-manager
    mkdir -p "${cw_ROOT}"/var/lib/event-periodic/scripts
