#!/bin/bash
################################################################################
##
## Alces Clusterware - Handler hook
## Copyright (C) 2015-2016 Stephen F. Norledge and Alces Software Ltd.
##
################################################################################
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

_prune_ssh_shosts() {
    local ip tmpfile
    ip="$1"
    echo "Removing IP address from shosts: $ip"
    tmpfile=$(mktemp /root/.shosts.clusterware.XXXXXX)
    chmod 0600 "${tmpfile}"
    grep -v "^${ip}$" /root/.shosts > "${tmpfile}"
    mv "${tmpfile}" /root/.shosts
}

_prune_ssh_known_hosts() {
    local ip tmpfile
    ip="$1"
    echo "Removing SSH host keys for: $ip"
    tmpfile=$(mktemp /etc/ssh/ssh_known_hosts.clusterware.XXXXXX)
    chmod 0644 "${tmpfile}"
    grep -v "^${ip}," /etc/ssh/ssh_known_hosts > "${tmpfile}"
    mv "${tmpfile}" /etc/ssh/ssh_known_hosts
}

main() {
    local count member_data
    member_data="$(cat)"
    member_unregister <<< "${member_data}"
    count="$(member_count)"
    if [ "${count}" -lt "$(member_quorum)" ]; then
        handler_run_hook cluster-inquorate "${count}"
    fi

    eval $(member_parse <<< "${member_data}")
    instance_id=$(member_find_tag aws_instanceid "${cw_MEMBER_tags}")
    if [ "${instance_id}" ]; then
        machine_type=$(member_find_tag aws_machinetype "${cw_MEMBER_tags}")
        "${cw_ROOT}"/libexec/share/flight-recorder "leave" "${instance_id}" "${cw_MEMBER_role}" "${machine_type}"
    fi

    "${cw_ROOT}"/libexec/share/prune-etc-hosts "${cw_MEMBER_name}" "${cw_MEMBER_ip}"
    if [ "${cw_MEMBER_role}" == "master" ]]; then
        _prune_ssh_shosts "${cw_MEMBER_ip}"
    fi

    _prune_ssh_known_hosts "${cw_MEMBER_ip}"
}

setup

require member
require handler

handler_tee main "$@"
