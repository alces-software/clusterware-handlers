#!/bin/bash
################################################################################
##
## Alces Clusterware - Handler hook
## Copyright (C) 2016 Stephen F. Norledge and Alces Software Ltd.
##
################################################################################
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.rc ]; then
            source "${a}"/clusterware/config.rc
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

_detect_autoscaling() {
    "${_AWS}" --region "${cw_INSTANCE_aws_region}" \
              autoscaling describe-auto-scaling-groups &>/dev/null
}

_configure_aws_autoscaling() {
    local group tags

    files_load_config config config/cluster

    # Ensure aws serviceware is installed.
    "${_ALCES}" service install aws

    if [ "${cw_INSTANCE_aws_autoscaling}" == "autodetect" ]; then
        if _detect_autoscaling; then
            echo "Autoscaling detected as enabled"
            sed -i -e 's/^cw_INSTANCE_aws_autoscaling=.*/cw_INSTANCE_aws_autoscaling=enabled/' \
                "${cw_ROOT}"/etc/config/cluster/instance-aws.rc
        else
            echo "Autoscaling detected as disabled"
            sed -i -e 's/^cw_INSTANCE_aws_autoscaling=.*/cw_INSTANCE_aws_autoscaling=disabled/' \
                "${cw_ROOT}"/etc/config/cluster/instance-aws.rc
            sed -i -e 's/^cw_INSTANCE_autoscaling=.*/cw_INSTANCE_autoscaling=disabled/' \
                "${cw_ROOT}"/etc/config/cluster/instance.rc
        fi
    fi

    # Set serf tags containing:
    #  - instance creation time
    #  - autoscaling group name (if available)
    tags=(tags[aws_ctime]=${cw_INSTANCE_aws_ctime})

    group=$("${_AWS}" --region "${cw_INSTANCE_aws_region}" \
                      ec2 describe-tags \
                      --filters Name=resource-id,Values=${cw_INSTANCE_aws_instanceid} Name=key,Values=aws:autoscaling:groupName | \
                      grep -Po "(?<=Value\": \")[a-zA-Z0-9\-]+"
                   )
    if [ "$group" ]; then
        tags+=(tags[aws_group]=${group})
        tags+=(tags[aws_group_cores]=\"$(grep -c '^processor\s*: [0-9]*$' /proc/cpuinfo)\")
    fi
    echo "Setting autoscaling tags: ${tags[@]}"
    "${_JO}" "${tags[@]}" > "${cw_ROOT}"/etc/serf/tags-autoscaling.json
}

_configure_autoscaling() {
  echo "Preconfigured autoscaling type is ${cw_INSTANCE_autoscaling}"
  if files_load_config --optional instance-aws config/cluster; then
    echo "Instance is running on EC2; configuring for autoscaling"
    _configure_aws_autoscaling
  fi
}

main() {
    # Bail out if we're already configured (this is a reboot).
    if [ -d "${cw_ROOT}/etc/config/autoscaling" ]; then
        exit 0
    fi

    mkdir -p "${cw_ROOT}/etc/config/autoscaling"

    files_load_config instance config/cluster

    _configure_autoscaling
}

setup
require handler
require files
require ruby

_AWS="${cw_ROOT}"/opt/aws/bin/aws
_JO="${cw_ROOT}"/opt/jo/bin/jo
_ALCES="${cw_ROOT}"/bin/alces

handler_tee main "$@"
