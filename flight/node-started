#!/bin/bash
#==============================================================================
# Copyright (C) 2015 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

main() {
    local ip
    . "${cw_ROOT}"/etc/config/cluster/instance.vars.sh
    if [ "${cw_INSTANCE_role}" == "master" ]; then
        . "${cw_ROOT}"/etc/config/cluster/config.rc
        . "${cw_ROOT}"/etc/config/cluster/auth.rc
        ip=$(network_get_public_address)
        echo "Notify ${cw_CLUSTER_service_url}/clusters: '${cw_CLUSTER_uuid}' is 'available' at '${ip}'"
        cat <<JSON | webapi_patch \
            "${cw_CLUSTER_service_url}"/clusters/"${cw_CLUSTER_uuid}" \
            --auth "${cw_CLUSTER_uuid}:${cw_CLUSTER_auth_token}"
{
    "data": {
        "type": "clusters",
        "id": "${cw_CLUSTER_uuid}",
        "attributes": {
            "status": "available",
            "ip": "${ip}"
        }
    }
}
JSON
    fi
}

setup
require webapi
require handler
require network

handler_tee main "$@"
