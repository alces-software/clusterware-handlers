#!/bin/bash
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

main() {
    local sessionid
    local -A vnc

    content="$(cat)"
    # tee >(base64 -d > /tmp/${sessionid}.$(date "+%Y-%m-%d-%H%M%S").png)

    sessionid="$1"
    if sessiondir=$(vnc_find_sessiondir "${sessionid}"); then
        sessionid=$(basename "$sessiondir")
        . "${cw_ROOT}"/etc/config/cluster.vars.sh
        cat <<JSON | webapi_post "${cw_CLUSTER_service_url}"/sessions/${sessionid}/screens
{
    "data": {
        "type": "screen",
        "attributes": {
            "content": "${content}",
        },
        "relationships: {
            "session": {
                 "data": {"type": "session", "id": "${sessionid}"}
            }
        }
    }
}
JSON
    fi
}

setup
require vnc
require webapi

tee >(main "$@")
