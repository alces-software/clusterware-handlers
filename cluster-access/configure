#!/bin/bash
################################################################################
##
## Alces Clusterware - Handler hook
## Copyright (C) 2015-2016 Stephen F. Norledge and Alces Software Ltd.
##
################################################################################
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

main() {
    # Bail out if we're already configured (this is a reboot)
    if [ -d "${cw_ROOT}/etc/config/cluster-access" ]; then
        exit 0
    fi

    mkdir -p "${cw_ROOT}/etc/config/cluster-access"

    files_load_config instance config/cluster
    if [[ "${cw_INSTANCE_role}" == "master" ]]; then
        "${cw_ROOT}"/bin/alces service enable alces-storage-manager-daemon
	files_load_config --optional cluster-access
	if [ "${cw_ACCESS_storage_SKIP_DEFAULTS}" != "true" ]; then
            "${cw_ROOT}"/bin/alces storage enable posix
	    echo -e "Home\n%#{dir}\n" | alces storage configure --system home posix
            "${cw_ROOT}"/bin/alces storage use --system home
	fi
    elif [[ "${cw_INSTANCE_role}" == "appliance" ]]; then
	if [[ "${cw_INSTANCE_tag_APPLIANCE_ROLES}" == "*:storage:*" ]]; then
            "${cw_ROOT}"/bin/alces service enable alces-storage-manager
            if distro_start_service alces-storage-manager; then
		echo "Alces Storage Manager service started"
            else
		echo "Unable to start Alces Storage Manager service"
            fi
	fi
    fi
}

setup
require handler
require files

handler_tee main "$@"
