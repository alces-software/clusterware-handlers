#!/bin/bash
################################################################################
##
## Alces Clusterware - Handler hook
## Copyright (C) 2015-2016 Stephen F. Norledge and Alces Software Ltd.
##
################################################################################
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

_write_configuration() {
    ruby_run <<RUBY
require 'yaml'

def write_file(name, content)
  File.write("${cw_ROOT}/etc/config/gridware/#{name}",content)
end

config = YAML.load_file('${cw_ROOT}/etc/config.yml')['cluster']['gridware'] || {}

gridware_vars = []
if config['depots']
  depot_names = []
  disabled_depot_names = []
  config['depots'].each do |d|
    depot_names << d['name']
    disabled_depot_names << d['name'] if d['disabled']
    if d['url']
      gridware_vars << "cw_GRIDWARE_depot_url_#{d['name']}=\"#{d['url']}\""
    end
  end
  gridware_vars << ('cw_GRIDWARE_depots="' << depot_names.join(' ') << '"')
  gridware_vars << ('cw_GRIDWARE_depots_disabled=":' << disabled_depot_names.join(':') << ':"')
end
gridware_vars << ('cw_GRIDWARE_trigger="' << (config['trigger'] || 'immediate') << '"')
write_file('gridware.rc', gridware_vars.join("\n"))
RUBY
}

_initialize_gridware() {
    local hook_dir
    hook_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
    "${hook_dir}"/share/initialize-gridware
}

main() {
    # Bail out if we're already configured (this is a reboot)
    if [ -d "${cw_ROOT}/etc/config/gridware" ]; then
        exit 0
    fi

    mkdir -p "${cw_ROOT}/etc/config/gridware"

    files_load_config instance config/cluster
    if [ "${cw_INSTANCE_role}" == "master" ]; then
	_write_configuration
	files_load_config gridware config/gridware
	if [ "${cw_GRIDWARE_trigger:-immediate}" == 'immediate' ]; then
	    _initialize_gridware
	fi
    fi
}

setup
require handler
require files
require ruby

handler_tee main "$@"
