#!/bin/bash
################################################################################
##
## Alces Clusterware - Handler hook
## Copyright (C) 2016 Stephen F. Norledge and Alces Software Ltd.
##
################################################################################
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

_iptables() {
    if ! iptables -C "$@" &>/dev/null; then
        echo "Adding iptables rule: $*"
        iptables -I "$@"
    else
        echo "iptables rule already exists: $*"
    fi
}

main() {
    local started cluster_network

    files_load_config instance config/cluster

    if [[ "${cw_INSTANCE_role}" == "master" ]]; then
	files_load_config cluster-vpn
	cw_CLUSTER_VPN_port=${cw_CLUSTER_VPN_port:-1194}
	cw_CLUSTER_VPN_intf=${cw_CLUSTER_VPN_intf:-tun0}
	cw_CLUSTER_VPN_cluster_intf=${cw_CLUSTER_VPN_cluster_intf:-eth0}
	cw_CLUSTER_VPN_network=${cw_CLUSTER_VPN_network:-10.41.41.0/24}
	cluster_network="$(network_get_iface_network ${cw_CLUSTER_VPN_cluster_intf})"

	# set: port, dev, server network, push route
	sed -e "s,^port .*,port ${cw_CLUSTER_VPN_port},g" \
	    -e "s,^dev .*,dev ${cw_CLUSTER_VPN_intf},g" \
	    -e "s,^server .*,server ${cw_CLUSTER_VPN_network%/*} $(network_cidr_to_mask ${cw_CLUSTER_VPN_network#*/}),g" \
	    -e "s,^push .*,push \"route ${cluster_network%/*} $(network_cidr_to_mask ${cluster_network#*/})\",g" \
	    -i "${cw_ROOT}"/etc/openvpn/clusterware.conf

	sed -e "s,^remote .*,remote $(network_get_public_address) ${cw_CLUSTER_VPN_port},g" \
	    -i "${cw_ROOT}"/etc/openvpn/client/clusterware/client.conf

        if distro_is el7; then
	    distro_start_service clusterware-openvpn@clusterware
	    started=$?
	else
	    distro_start_service clusterware-openvpn
	    started=$?
	fi
        if [ $started -gt 0 ]; then
            echo "Started OpenVPN service"
	    _iptables INPUT -p tcp --dport ${cw_CLUSTER_VPN_port} -j ACCEPT
	    _iptables FORWARD -i ${cw_CLUSTER_VPN_intf} -j ACCEPT
	    _iptables FORWARD -o ${cw_CLUSTER_VPN_intf} -j ACCEPT
	    _iptables POSTROUTING -t nat -o ${cw_CLUSTER_VPN_cluster_intf} -j MASQUERADE
	    sysctl net.ipv4.ip_forward=1
        else
            echo "Unable to start OpenVPN service"
        fi
    fi
}

setup
require handler
require files
require distro
require network

files_load_config clusterware
case "${cw_VERSION:-1.0.0}" in
    1.[012].*)
	exit 0
	;;
    *)
	handler_tee main "$@"
	;;
esac
